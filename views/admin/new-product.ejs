<!DOCTYPE html>
<html lang="uk">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= pageTitle %></title>
    <link rel="stylesheet" href="/css/common.css">
    <link rel="stylesheet" href="/css/admin.css">
</head>
<body class="admin-body">

    <header class="admin-header">
        <div class="container">
            <h1>Панель Адміністратора</h1>
            <nav>
                <a href="/admin/orders">Замовлення</a>
                <a href="/admin/products" class="active">Товари</a>
                <a href="/admin/logout">Вийти</a>
            </nav>
        </div>
    </header>

    <main class="admin-main">
        <div class="container">
            <h1><%= pageTitle %></h1>
            <hr style="margin-bottom: 25px;">

            <%
            let errorMessage = null;
            if (locals.error) {
                if (locals.error === 'validation') errorMessage = 'Будь ласка, заповніть усі обов\'язкові поля.';
                else if (locals.error === 'price_validation') errorMessage = 'Максимальна ціна не може бути меншою за мінімальну.';
                else if (locals.error === 'file_type') errorMessage = 'Дозволено завантажувати лише файли зображень (jpg, jpeg, png, gif, webp).';
                else if (locals.error === 'no_image') errorMessage = 'Будь ласка, завантажте хоча б одне зображення товару.'; // Додано обробку помилки відсутності зображення
                else errorMessage = locals.error;
            } else if (typeof query !== 'undefined' && query.error) {
                 if (query.error === 'validation') errorMessage = 'Будь ласка, заповніть усі обов\'язкові поля.';
                 else if (query.error === 'price_validation') errorMessage = 'Максимальна ціна не може бути меншою за мінімальну.';
                 else errorMessage = 'Сталася помилка. Спробуйте ще раз.';
            }
            %>
            <% if (errorMessage) { %>
                <div class="error-message" style="margin-bottom: 20px; text-align: center;">
                    <%= errorMessage %>
                </div>
            <% } %>

            <div class="admin-form-container">
                <form method="POST" action="/admin/products" enctype="multipart/form-data">

                    <div class="admin-form-group">
                        <label for="name">Назва товару <span style="color:red;">*</span></label>
                        <input type="text" id="name" name="name" required value="<%= locals.formData?.name || '' %>">
                    </div>

                    <div class="admin-form-group">
                        <label for="description">Опис <span style="color:red;">*</span></label>
                        <textarea id="description" name="description" rows="5" required><%= locals.formData?.description || '' %></textarea>
                    </div>

                    <div class="admin-form-group">
                        <label for="metaDescription">Meta Опис (для SEO)</label>
                        <textarea id="metaDescription" name="metaDescription" rows="3" maxlength="170" placeholder="Короткий опис для пошуку Google (до 170 симв.)"><%= locals.formData?.metaDescription || '' %></textarea>
                        <small>Цей текст буде показано в результатах пошуку. Має бути коротким і привабливим.</small>
                        <div id="metaDescCounter" style="font-size: 0.8em; text-align: right; color: #6c757d; margin-top: 3px;">0 / 170</div>
                    </div>

                    <div class="form-row">
                        <div class="admin-form-group">
                            <label for="price">Мін. ціна (грн) <span style="color:red;">*</span></label>
                            <input type="number" id="price" name="price" required min="0" step="0.01" value="<%= locals.formData?.price || '' %>">
                        </div>
                        <div class="admin-form-group">
                            <label for="maxPrice">Макс. ціна (грн) <small>(необов'язково)</small></label>
                            <input type="number" id="maxPrice" name="maxPrice" min="0" step="0.01" value="<%= locals.formData?.maxPrice || '' %>">
                            <small>Якщо пусто або 0, ціна буде фіксована.</small>
                        </div>
                    </div>

                    <div class="admin-form-group">
                        <label for="category">Категорія <span style="color:red;">*</span></label>
                        <select id="category" name="category" required>
                            <option value="">-- Виберіть категорію --</option> <% if (typeof categories !== 'undefined' && Array.isArray(categories)) { %>
                                <% categories.forEach(cat => { %>
                                    <option value="<%= cat %>" <%= (locals.formData?.category === cat) ? 'selected' : '' %>><%= cat %></option>
                                <% }); %>
                            <% } else { %>
                                <option value="" disabled>Помилка: список категорій не завантажено.</option>
                            <% } %>
                        </select>
                    </div>

                    <div class="admin-form-group">
                        <label for="status">Статус товару <span style="color:red;">*</span></label>
                        <select id="status" name="status" required>
                            <%# Для форми редагування (edit-product.ejs) використовуємо productData %>
                            <% if (typeof productData !== 'undefined') { %>
                                <option value="Під замовлення" <%= (productData.status === 'Під замовлення') ? 'selected' : '' %>>Під замовлення</option>
                                <option value="В наявності" <%= (productData.status === 'В наявності') ? 'selected' : '' %>>В наявності</option>
                            <%# Для форми створення (new-product.ejs) можна встановити значення за замовчуванням %>
                            <% } else { %>
                                 <option value="Під замовлення" selected>Під замовлення</option> <%# За замовчуванням %>
                                 <option value="В наявності">В наявності</option>
                            <% } %>
                        </select>
                    </div>
                    <div class="admin-form-group">
                        <label for="creation_time_info">Термін виготовлення <small>(напр., 'до 10 роб. днів')</small> <span style="color:red;">*</span></label>
                        <input type="text" id="creation_time_info" name="creation_time_info" required placeholder="Наприклад: 5-7 робочих днів" value="<%= locals.formData?.creation_time_info || '' %>">
                    </div>
                    <div class="admin-form-group">
                        <label for="imageFiles">Зображення товару <small>(мін. 1, макс. 10)</small> <span style="color:red;">*</span></label>
                        <p style="font-size: 0.9em; color: #6c757d; margin-bottom: 5px;">Натисніть кнопку нижче, щоб вибрати файли. Ви можете додавати файли декілька разів.</p>
                        <input type="file" id="imageFiles" name="imageFiles" multiple required accept="image/png, image/jpeg, image/jpg, image/gif, image/webp">
                        <small>Дозволені типи: png, jpg, jpeg, gif, webp. Макс. розмір: 5MB.</small>
                        <div id="imagePreviewContainer" style="margin-top: 15px; display: flex; flex-wrap: wrap; gap: 10px;">
                           </div>
                    </div>

                    <div class="admin-form-group">
                        <label for="tags">Теги <small>(через кому)</small></label>
                         <input type="text" id="tags" name="tags" placeholder="квіти, традиційний, подарунок" value="<%= locals.formData?.tags ? (Array.isArray(locals.formData.tags) ? locals.formData.tags.join(', ') : locals.formData.tags) : '' %>">
                    </div>

                     <div class="admin-form-group">
                        <label for="materials">Матеріали <small>(через кому)</small></label>
                         <input type="text" id="materials" name="materials" placeholder="Льон 100%, Бавовна" value="<%= locals.formData?.materials ? (Array.isArray(locals.formData.materials) ? locals.formData.materials.join(', ') : locals.formData.materials) : '' %>">
                    </div>

                     <div class="admin-form-group">
                        <label for="colors">Кольори <small>(через кому)</small></label>
                         <input type="text" id="colors" name="colors" placeholder="Білий, Червоний, Чорний" value="<%= locals.formData?.colors ? (Array.isArray(locals.formData.colors) ? locals.formData.colors.join(', ') : locals.formData.colors) : '' %>">
                    </div>

                     <div class="admin-form-group">
                        <label for="care_instructions">Інструкції по догляду</label>
                        <textarea id="care_instructions" name="care_instructions" rows="3"><%= locals.formData?.care_instructions || '' %></textarea>
                    </div>

                     <div class="admin-form-group checkbox-group">
                          <label>
                              <input type="checkbox" name="isFeatured" <%= locals.formData?.isFeatured ? 'checked' : '' %>>
                              <span>Показати в "Наші Хіти" на головній?</span>
                          </label>
                     </div>

                    <hr>
                    <div class="form-actions">
                        <button type="submit" class="btn btn-primary">Зберегти товар</button>
                        <a href="/admin/products" class="btn btn-secondary">Скасувати</a>
                    </div>

                </form>
            </div>
        </div>
    </main>

    <script>
            const metaDescTextarea = document.getElementById('metaDescription');
    const metaDescCounter = document.getElementById('metaDescCounter');
    const maxLength = 170;

    function updateCounter() {
        const currentLength = metaDescTextarea.value.length;
        metaDescCounter.textContent = `${currentLength} / ${maxLength}`;
        if (currentLength > maxLength) {
            metaDescCounter.style.color = 'red';
        } else if (currentLength > 150) {
             metaDescCounter.style.color = 'orange';
        }
         else {
            metaDescCounter.style.color = '#6c757d';
        }
    }

    if (metaDescTextarea && metaDescCounter) {
        metaDescTextarea.addEventListener('input', updateCounter);
        // Вызовите счетчик при загрузке страницы для формы редактирования
        updateCounter();
    }
    
        const imageInput = document.getElementById('imageFiles');
        const previewContainer = document.getElementById('imagePreviewContainer');
        const productForm = document.querySelector('form[action="/admin/products"]'); // Знаходимо форму
        let selectedFiles = []; // Масив для зберігання вибраних файлів (File об'єктів)
        const MAX_FILES = 10; // Максимальна кількість файлів
    
        // --- Функція для оновлення прев'ю ---
        function updatePreview() {
            previewContainer.innerHTML = ''; // Очищуємо контейнер
            selectedFiles.forEach((file, index) => {
                const reader = new FileReader();
    
                reader.onload = function(e) {
                    const previewWrapper = document.createElement('div');
                    previewWrapper.style.position = 'relative';
                    previewWrapper.style.marginRight = '10px'; // Додамо відступ між прев'ю
    
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.style.maxWidth = '80px';
                    img.style.maxHeight = '80px';
                    img.style.objectFit = 'cover';
                    img.style.borderRadius = '4px';
                    img.style.display = 'block'; // Переконаємось, що img блочний
    
                    const removeBtn = document.createElement('button');
                    removeBtn.type = 'button'; // Важливо, щоб не сабмітило форму
                    removeBtn.textContent = '×'; // Хрестик для видалення
                    removeBtn.style.position = 'absolute';
                    removeBtn.style.top = '-5px';
                    removeBtn.style.right = '-5px';
                    removeBtn.style.background = 'rgba(255, 0, 0, 0.7)';
                    removeBtn.style.color = 'white';
                    removeBtn.style.border = 'none';
                    removeBtn.style.borderRadius = '50%';
                    removeBtn.style.width = '18px';
                    removeBtn.style.height = '18px';
                    removeBtn.style.fontSize = '12px';
                    removeBtn.style.lineHeight = '16px';
                    removeBtn.style.textAlign = 'center';
                    removeBtn.style.cursor = 'pointer';
                    removeBtn.style.padding = '0';
                    // Зберігаємо індекс файлу в кнопці для легкого видалення
                    removeBtn.dataset.index = index;
    
                    removeBtn.addEventListener('click', handleRemoveFile);
    
                    previewWrapper.appendChild(img);
                    previewWrapper.appendChild(removeBtn);
                    previewContainer.appendChild(previewWrapper);
                }
                reader.readAsDataURL(file);
            });
    
            // Оновлюємо статус інпуту (чи є файли)
            imageInput.required = selectedFiles.length === 0;
        }
    
        // --- Обробник події вибору файлів ---
        if (imageInput) {
            imageInput.addEventListener('change', function(event) {
                if (event.target.files) {
                    const filesToAdd = Array.from(event.target.files);
                    const currentTotal = selectedFiles.length + filesToAdd.length;
    
                    if (currentTotal > MAX_FILES) {
                        alert(`Ви можете завантажити максимум ${MAX_FILES} зображень. Ви вибрали ${filesToAdd.length}, вже є ${selectedFiles.length}.`);
                        // Очищуємо вибір в інпуті, щоб користувач міг спробувати ще раз
                        event.target.value = null;
                        return;
                    }
    
                    // Додаємо нові файли до нашого масиву
                    selectedFiles.push(...filesToAdd);
                    // Оновлюємо прев'ю
                    updatePreview();
                    // Очищуємо сам інпут, щоб дозволити повторний вибір тих самих файлів
                    // і щоб стандартна логіка форми не бачила ці файли (ми їх відправимо вручну)
                    event.target.value = null;
                }
            });
        }
    
        // --- Функція для видалення файлу ---
        function handleRemoveFile(event) {
            const indexToRemove = parseInt(event.target.dataset.index, 10);
            if (!isNaN(indexToRemove) && indexToRemove >= 0 && indexToRemove < selectedFiles.length) {
                // Видаляємо файл з масиву
                selectedFiles.splice(indexToRemove, 1);
                // Оновлюємо прев'ю
                updatePreview();
            }
        }
    
        // --- Обробник відправки форми ---
        if (productForm) {
            productForm.addEventListener('submit', async function(event) {
                event.preventDefault(); // Зупиняємо стандартну відправку форми
    
                if (selectedFiles.length === 0) {
                    alert('Будь ласка, завантажте хоча б одне зображення товару.');
                    imageInput.focus(); // Ставимо фокус на інпут файлів
                    return; // Зупиняємо відправку
                }
                if (selectedFiles.length > MAX_FILES) {
                     alert(`Забагато файлів. Максимум ${MAX_FILES}. Видаліть зайві.`);
                     return;
                }
    
                // Створюємо FormData
                const formData = new FormData();
    
                // Додаємо всі текстові поля та select з форми
                const formElements = productForm.elements;
                for (let i = 0; i < formElements.length; i++) {
                    const element = formElements[i];
                    // Пропускаємо сам інпут файлів та кнопки
                    if (element.type !== 'file' && element.type !== 'submit' && element.type !== 'button' && element.name) {
                         if (element.type === 'checkbox') {
                            if (element.checked) {
                                formData.append(element.name, element.value || 'on');
                            }
                            // Якщо чекбокс не відмічений, він не додається в FormData, що зазвичай є правильною поведінкою
                        } else {
                            formData.append(element.name, element.value);
                        }
                    }
                }
    
                // Додаємо вибрані файли (з нашого масиву)
                selectedFiles.forEach((file) => {
                    // Важливо: ім'я 'imageFiles' має збігатися з тим, що очікує multer.array() на бекенді
                    formData.append('imageFiles', file, file.name);
                });
    
                // Показуємо індикатор завантаження (опціонально)
                const submitButton = productForm.querySelector('button[type="submit"]');
                if (submitButton) {
                    submitButton.disabled = true;
                    submitButton.textContent = 'Збереження...';
                }
    
                try {
                    // Відправляємо FormData на сервер за допомогою fetch
                    const response = await fetch('/admin/products', {
                        method: 'POST',
                        body: formData // Передаємо FormData, Content-Type встановиться автоматично
                    });
    
                    // Обробляємо відповідь
                    if (response.ok) {
                        // Якщо сервер відповів успішно (наприклад, редіректом)
                        // Браузер автоматично перейде за редіректом, якщо відповідь сервера - редірект
                        // Якщо сервер відповідає JSON, обробіть його тут
                        // Наприклад, якщо очікуємо редірект на /admin/products
                        if (response.redirected) {
                            window.location.href = response.url; // Переходимо за редіректом
                        } else {
                             // Можливо, показати повідомлення про успіх і потім перейти
                             alert('Товар успішно збережено!');
                             window.location.href = '/admin/products';
                        }
                    } else {
                        // Якщо сервер відповів помилкою
                        const errorData = await response.json().catch(() => ({ message: `Помилка сервера: ${response.statusText}` })); // Спробуємо отримати JSON помилки
                        alert(`Помилка збереження товару: ${errorData.message || response.statusText}`);
                         if (submitButton) {
                             submitButton.disabled = false;
                             submitButton.textContent = 'Зберегти товар';
                         }
                    }
                } catch (error) {
                    console.error('Помилка при відправці форми:', error);
                    alert('Сталася мережева помилка при збереженні товару.');
                    if (submitButton) {
                        submitButton.disabled = false;
                        submitButton.textContent = 'Зберегти товар';
                    }
                }
            });
        }
    
    </script>
</body>
</html>